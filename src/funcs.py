def elem_sort(el_ls):
    """
    Преобразует элементы списка в соответствующие числовые типы данных.

    Функция анализирует строковое представление каждого элемента списка
    и преобразует его в int (если число целое) или float (если число с плавающей точкой).

    Args:
        el_ls (list): Список элементов, которые можно преобразовать в числа.
                     Элементы могут быть строками, целыми или вещественными числами.

    Returns:
        list: Список чисел, где элементы преобразованы в int или float.

    Examples:
        >>> elem_sort([1.5, 2, 2.0, -3.1])
        [1.5, 2, 2.0, -3.1]

        >>> elem_sort(['1.5', '2', '2.0', '-3.1'])
        [1.5, 2, 2.0, -3.1]

        >>> elem_sort(['3', '4.7', '-2'])
        [3, 4.7, -2]

    Note:
        Функция определяет тип по наличию точки в строковом представлении числа.
        Числа с одной точкой преобразуются в float, остальные - в int.
    """
    lst_sort = []
    for elem in range(len(el_ls)):
        if str(el_ls[elem]).count(".") == 1:
            lst_sort.append(float(el_ls[elem]))
        else:
            lst_sort.append(int(el_ls[elem]))
    return lst_sort


def matr_srt(matr_lst):
    """
    Меняет элементы столбцов и строк местами

    Функция принимает матрицу, состоящую из строк и/или столбцов
    и возвращает матрицу, где элементы строк и столбцов поменяны местами

    Args:
        matr_lst (list): Матрица, состоящая из строк и/или столбцов.
        Элементы строк и столбцов могут быть целыми числами или дробными числами

    Returns:
        modify_matrix (list): Матрица, где столбцы и строки поменяны местами

    Examples:
        >>> matr_srt([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
        [[1, 4, 7], [2, 5, 8], [3, 6, 9]]

        >>> matr_srt([[1], [2], [3]])
        [[1, 2, 3]]

        >>> matr_srt([[1, 2], [3, 4]])
        [[1, 3], [2, 4]]
    """
    rows, cols = len(matr_lst), len(matr_lst[0])
    modify_matrix = [[1 for i in range(rows)] for j in range(cols)]
    for i in range(cols):
        for j in range(rows):
            modify_matrix[i][j] = matr_lst[j][i]
    return modify_matrix


def equal_len(matr_lst):
    """
    Проверяет чтобы длина строк матрицы была одинаковой

    Функция принимает матрицу, состоящую из строк и столбцов.
    Проходится по строкам матрицы и проверяет их на одинаковую длину.

    Args:
        matr_lst (list): Матрица, состоящая из строк и столбцов.
        Элементы строк и столбцов могут быть целыми числами или дробными числами

    Returns:
        matr_lst (list): Возвращает входную матрицу, либо ValueError, если длинны строк отличаются

    Examples:
        >>> matr_srt([[1, 2, 3], [4, 5, 6]])
        [[1, 2, 3], [4, 5, 6]]

        >>> matr_srt([[1, 2], [3]])
        ValueError
    """
    max_len = max(len(s) for s in matr_lst)
    if all(len(s) == max_len for s in matr_lst):
        return matr_lst
    else:
        return "ValueError"
